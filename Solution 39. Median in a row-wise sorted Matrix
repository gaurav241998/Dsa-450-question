1st method is traversing the whole matrix and then place all the numbers into another array then sort them and find the median with time complexity O(r*clogr*c) and space complexity O(r*c).
2nd method is to find the minimum and maximum element and then do a binary search from min to max and count the number of elements less than that number if it is same as desired number then it is an median.
code for the second number - 
int min = INT_MAX, max = INT_MIN;
        for(int i=0;i<r;i++)
        {
            if(matrix[i][0]<min)
                  min = matrix[i][0];
               
            if(matrix[i][c-1]>max)
                  max = matrix[i][c-1];
        }
        
        int desired = (r*c+1)/2;
        while(min<max)
        {
            int mid = min + (max-min)/2;
            int place = 0;
            for(int i=0;i<r;i++)
             place += upper_bound(matrix[i].begin(),matrix[i].end(),mid) - matrix[i].begin();
            if(place<desired)
             min = mid+1;
            else 
             max = mid;
        }
        return min;
    }
