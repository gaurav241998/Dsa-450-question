1st method - By hashing with time complexity O(N) and with space complexity O(N).
code - 
bool detectLoop(Node* head)
    {
        if(head == NULL)
           return 0;
           
        unordered_map<Node*,int> m;
        while(head!=NULL)
        {
            if(!m[head])
            {
                m[head] = 1;
                head = head->next;
            }
            else 
            {
                return 1;
            }
        }
        return 0;
    }
    
    
2nd method - using the rabbit turtle algorithm with time complexity O(N) and space complexity O(1).
code - 
bool detectLoop(Node* head)
    {
        if(head == NULL || head->next == NULL)
           return 0;
           
        struct Node *slow = head;
        struct Node *fast = head;
        while(fast!=NULL && fast->next!=NULL)
        {
            fast = fast->next->next;
            slow = slow->next;
            if(fast == slow)
            {
                return 1;
            }
        }
        return 0;
    }
